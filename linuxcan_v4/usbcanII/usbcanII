#!/bin/bash
# Kvaser CAN driver                     
# usbcanII - start/stop usbcanII  and create/delete device files
# Copyright (C) 2005 Kvaser AB - support@kvaser.com - www.kvaser.com  

LOG=/usr/bin/logger
AWK=/bin/awk
GREP=/bin/grep
MKNOD=/bin/mknod
MODPROBE=/sbin/modprobe
SLEEP=/bin/sleep

MODULE=usbcanII


#     
# test kernel version
#     
kernel_ver=`uname -r | $AWK -F . '{print $2}'` 

case $kernel_ver in
   "6") kv_module_install=modprobe
        ;;
   *)   kv_module_install=insmod
        ;;
esac

# Current hotplug loads module file automatically
# /sbin/$kv_module_install ${MODULE} || exit 1

#
# Install 
#
$LOG -t $0 "Kvaser USB hotplug script"

# Add ${MODULE} module
if test $ACTION = 'add'
then
    $SLEEP 2 # Sleep a second or two to be sure that module init is executed
    if  [ -e /proc/${MODULE} ] 
    then 
	nrchan=`cat /proc/${MODULE} | $GREP 'total channels' | cut -d' ' -f 3`
	major=`cat /proc/devices | $GREP ${MODULE} | cut -d' ' -f 1`
        for (( n=0 ; $n<${nrchan}; n++ )) ; do
         p=`expr 2 + $nrchan - $n`
 	 minor=`cat /proc/${MODULE} | $GREP 'minor numbers' | cut -d' ' -f $p`
	 $LOG -t $0 $major, $minor, $nrchan, $n, $p
	 if [ ! -c /dev/${MODULE}$minor ] ; then 
	     $LOG -t $0 "${MODULE} device with minor $minor inserted"
	     $MKNOD /dev/${MODULE}$minor c $major $minor
	     #if test -z $REMOVER ; then exit 0 ; fi
             # The file $REMOVER (is unique for each usb device)
             # is called by the HOTPLUG system on removal
             # We have to write the uninstall script to it
	     # When all devices are inserted at the same time, e.g. at start up
	     # racing may happen, which means that device files
             # can not be removed until the last device is removed and the 
             # module is removed.
	     # Try to remove the ${MODULE} module, if successful remove all ${MODULE} device files.
	     echo "#!/bin/sh" >$REMOVER
	     echo "$MODPROBE -r ${MODULE}" >>$REMOVER
	     echo "$SLEEP 1" >>$REMOVER
	     echo "if [ ! -e /proc/${MODULE} ] ; then rm -f /dev/${MODULE}* && $LOG -t $0 "Module ${MODULE}  with minor device files removed" ; fi" >>$REMOVER
	     chmod +x $REMOVER
#	     exit 0
	 fi
	done
    fi
fi

# Handle remove in another way just in case.
if test $ACTION = 'remove' 
then
    # When all devices are inserted at the same time, e.g. at start up
    # racing may happen, which means that device files
    # can not be removed until the last device is removed and the 
    # module is removed.
    # Try to remove the ${MODULE} module, if successful remove all ${MODULE} device files.
    $MODPROBE -r ${MODULE}
    if [ ! -e /proc/${MODULE} ] ; then rm -f /dev/${MODULE}* && $LOG -t $0 "Module ${MODULE} with minor $minor removed" ; fi
    exit 0
fi
exit 0
